# $Id$

test "VCL: test syntax/semantic checks on backend decls. (vcc_backend.c)"

# Missing backend
varnish v1 -badvcl {
}

# Reference to non-existent backend
varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
	}
	sub vcl_recv {
		set req.backend = b2;
	}
}

# Missing .host
varnish v1 -badvcl {
	backend b1 {
		.port = "http";
	}
}

# Too many .host
varnish v1 -badvcl {
	backend b1 {
		.host = "foo";
		.host = "bar";
	}
}

# Too many .port
varnish v1 -badvcl {
	backend b1 {
		.host = "foo";
		.port = "http";
		.port = "https";
	}
}

# Too many .connect_timeout
varnish v1 -badvcl {
	backend b1 {
		.host = "foo";
		.connect_timeout = 1m;
		.connect_timeout = 1m;
	}
}

# unknown field
varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
		.foobar = 123;
	}
}

# Check backend reference by name
varnish v1 -badvcl {
	backend b1 { .host = "127.0.0.2"; }
	director r1 random {
		{ .weight = 1; .backend = b1; }
		{ .weight = 1; .backend = { .host = "127.0.0.3"; } }
		{ .weight = 1; .backend = 3745; }  // Brownie points for getting the joke
	}
}

# Check backend reference by name
varnish v1 -badvcl {
	backend b1 { .host = "127.0.0.2"; }
	backend b2 b1;
}

# Check backend reference by non-C-compat name
varnish v1 -badvcl {
	backend b-1 { .host = "127.0.0.2"; }
}

# Check backend reference by non-C-compat name
varnish v1 -badvcl {
	backend b1 { .host = "127.0.0.2"; }
	sub vcl_recv {
		set req.backend = b-1;
	}
}

# Old backend syntax
varnish v1 -badvcl {
	backend b1 {
		set host = "127.0.0.1";
	}
}

# Too many .connect_timeout
varnish v1 -badvcl {
	backend b1 {
		.host = k"foo";
		.connect_timeout = 1 q;
	}
}

# Two clashing backends
varnish v1 -badvcl {
	backend b1 { .host = "127.0.0.1"; }
	backend b1 { .host = "127.0.0.1"; }
}

# Unknown director policy
varnish v1 -badvcl {
	director r1 anarchy { .host = "127.0.0.1"; }
}

varnish v1 -badvcl {
	/* too many IP numbers */
	backend b1 { .host = "cnn.com"; }
}

varnish v1 -badvcl {
	backend b1 { .host = "////"; }
}

varnish v1 -badvcl {
	backend b1 { .host = "127.0.0.1"; .port = "////"; }
}

varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
		.foobar = "foo";
	}
}

varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
		.probe = {
			.ice = "vanilla";
		}
	}
}

varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
		.probe = { .window = 8; }
	}
}

varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
		.probe = { .threshold = 65; }
	}
}

varnish v1 -vcl {
	backend b1 {
		.host = "127.0.0.1";
		.probe = { .threshold = 64; }
	}
}

varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
		.probe = { .threshold = 32; .window = 65; }
	}
}


varnish v1 -vcl {
	backend b1 {
		.host = "127.0.0.1";
		.probe = { .threshold = 32; .window = 64; }
	}
}


varnish v1 -badvcl {
	backend b1 {
		.host = "127.0.0.1";
		.probe = { .threshold = 32; .window = 31; }
	}
}

