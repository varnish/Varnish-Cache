-passes=3

// Review all below this line

-printf_code( H, void *, unsigned)
-printf_code( ju, long long unsigned)
-printf_code( jx, long long unsigned)

+libh ../../config.h
-header(../../config.h)
-sem(lbv_assert, r_no)
-sem(strchr, 1p, type(1), 2n == 0 ? (@p < 1p) : (@p < 1p || @p == 0 ))
-sem(vcc_new_source, custodial(1))

-emacro((???),va_arg)	// the va_arg() macro can yield 415, 416, 661, 662
			// 796 and 797 (out-of-bounds errors).


-emacro(413, offsetof)	// likely null pointer

// -ffc    // No automatic custody

-esym(534, vsb_printf)	// Ignoring return value of function
-esym(534, vsb_cat)	// Ignoring return value of function
-esym(534, vsb_bcat)	// Ignoring return value of function
-esym(534, vsb_vprintf)	// Ignoring return value of function
-esym(534, memset)	// Ignoring return value of function
-e788			// enum constant 'HND_Unclass' not used within defaulted switch
-e716			// while(1) ... 
-e786			// String concatenation within initializer
-e732			// Loss of sign (arg. no. 2) (int to unsigned int)


-e763	// Redundant declaration for symbol '...' previously declared


-e737	// Loss of sign in promotion from int to unsigned int
-e534	// Ignoring return value of function
-e506	// Constant value boolean
-e774	// Boolean within 'if' always evaluates to False
-e713	// Loss of precision (assignment) (unsigned long long to long long)
-e574	// Signed-unsigned mix with relational
-e539	// Did not expect positive indentation
-e734	// Loss of precision (assignment) (31 bits to 8 bits)
-e747	// Significant prototype coercion (arg. no. 2) long
-e712	// Loss of precision (assignment) (long long to
