# $Id$

test "Various VCL compiler coverage tests"

varnish v1 -vcl {
	backend b { .host = "127.0.0.1"; }
	include "/dev/null" ;
}

varnish v1 -badvcl {
	backend b { .host = "127.0.0.1"; }
	include "/dev/null" |
}

varnish v1 -badvcl {
	backend b { .host = "127.0.0.1"; }
	include <<
}

varnish v1 -vcl {
	backend b { .host = "127.0.0.1"; }
	sub vcl_recv {
		if (req.url == "foo") {
		} elsif (req.url == "bar") {
		} elseif (req.url == "baz") {
		}
	}
}

varnish v1 -badvcl {
	/* token test */
        error lookup hash pipe pass fetch deliver discard keep restart
        include 
        if else elseif elsif
	++ -- && || <= == != >= >> << += -= *= /=
	{ } ( ) * + - / % > < = ; ! & . | ~ ,
}

varnish v1 -vcl {

	backend b { .host = "127.0.0.1"; }

	/* Test string regexp matching and "else if" */
	sub vcl_recv {
		if ((req.url ~ "foobar")) {
			pass;
		} else if (req.url ~ "snafu") {
			pipe;
		} else {
			pass;
		}
	}
}


varnish v1 -vcl {

	backend b { .host = "127.0.0.1"; }

	/* test time and backend comparison */
	sub vcl_fetch {
		if (obj.ttl > 1d) {
			set obj.ttl = 1d;
		}
		if (req.backend == b) {
			set obj.ttl = 1d;
		} else if (req.backend != b) {
			set obj.ttl = 1h;
		}
	}
	
}

varnish v1 -badvcl {
	backend b { .host = "127.0.0.1"; }
	sub vcl_fetch { set obj.ttl = 1. k; }
}

varnish v1 -badvcl {
	backend b { .host = "127.0.0.1"; }
	sub vcl_fetch { if (obj.ttl *= 2) { } }
}

varnish v1 -badvcl {
	backend b { .host = "127.0.0.1"; }
	sub vcl_recv { if (req.backend > b) { } }
}

varnish v1 -badvcl {
	backend b { .host = "127.0.0.1"; }
	sub vcl_hash { if (req.hash != "foo") { } }
}

varnish v1 -badvcl {
	backend b { .host = "127.0.0.1"; }
	sub vcl_hash { if (2 == 3) { } }
}
