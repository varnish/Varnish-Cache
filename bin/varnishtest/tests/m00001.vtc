varnishtest "Test std vmod"

server s1 {
	rxreq
	txresp -hdr "foo: bAr" -hdr "bar: fOo" -bodylen 4
} -start

varnish v1 -vcl+backend {
	import ${vmod_std};

	sub vcl_deliver {
		set resp.http.foo = std.toupper(resp.http.foo);
		set resp.http.bar = std.tolower(resp.http.bar);
		std.set_ip_tos(32);
	}
} -start

varnish v1 -cliok "param.set debug +vclrel"

client c1 {
	txreq -url "/bar"
	rxresp
	expect resp.status == 200
	expect resp.bodylen == "4"
	expect resp.http.foo == "BAR"
	expect resp.http.bar == "foo"
} -run

varnish v1 -vcl+backend {
}

client c1 {
	txreq -url "/bar"
	rxresp
	expect resp.status == 200
	expect resp.bodylen == "4"
	expect resp.http.foo == "bAr"
	expect resp.http.bar == "fOo"
} -run

varnish v1 -cliok "debug.vmod"
varnish v1 -cliok "vcl.list"

varnish v1 -expect vmods == 1

varnish v1 -cliok "vcl.discard vcl1"
varnish v1 -cliok "vcl.list"
varnish v1 -cliok "debug.vmod"

varnish v1 -errvcl {Module std already imported.} {
	import ${vmod_std};
	import ${vmod_std};
}

varnish v1 -errvcl {Symbol not found: 'std' (expected type BOOL):} {
	import ${vmod_std};

	sub vcl_recv {
		if (std == 2) {
		}
	}
}

varnish v1 -cliok "debug.vmod"
varnish v1 -cliok "vcl.list"
varnish v1 -expect vmods == 0
